{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/accumulate/JS/webWorker上手.md?vue&type=template&id=7faad0a9&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/accumulate/JS/webWorker上手.md","mtime":1624609367460},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"我们都知道，JavaScript 是单线程的，在同一时刻只能处理一个任务，我们会通过 setTimeout()、setInterval()、ajax 和事件处理程序等技术模拟“并行”。但都不是真正意义上的并行:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Web Worker 是 HTML5 标准的一部分，这一规范定义了一套 API，它允许一段 JavaScript 程序运行在主线程之外的另外一个线程中。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"这在很大程度上利用了现在不断升级的电脑计算能力：能够在同一时间平行处理两个任务。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"blockquote\", [\n      _c(\"p\", [\n        _vm._v(\"游泳、健身了解一下：\"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href: \"http://obkoro1.com/\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"博客\"), _c(\"OutboundLink\")],\n          1\n        ),\n        _vm._v(\"、\"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href: \"http://obkoro1.com/web_accumulate/accumulate/\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"前端积累文档\"), _c(\"OutboundLink\")],\n          1\n        ),\n        _vm._v(\"、\"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href:\n                \"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/1631b6f52f7e7015.jpeg?raw=true\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"公众号\"), _c(\"OutboundLink\")],\n          1\n        ),\n        _vm._v(\"、\"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href: \"https://github.com/OBKoro1\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"GitHub\"), _c(\"OutboundLink\")],\n          1\n        )\n      ])\n    ]),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"这样就让 JS 变成多线程的环境了，我们可以把高延迟、花费大量时间的运算，分给 worker 线程，最后再把结果返回给主线程就可以了，因为时间花费多的任务被 web worker 承担了，主线程就会很流畅了！\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://codepen.io/OBKoro1/pen/JevMZY?editors=1000\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"codepen\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\",这里我写了一个 class，里面有详细注释，可以参考一下。\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._v(\" \"),\n    _c(\"ol\", [\n      _vm._m(9),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [_vm._v(\"字符串形式：\")]),\n        _vm._v(\" \"),\n        _vm._m(10),\n        _c(\"p\", [\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://codepen.io/OBKoro1/pen/JevMZY?editors=1000\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"栗子\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\"中就是使用这种形式的，方便我们演示。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\n            \"在项目中：我们可以把worker线程的逻辑写在js文件里面，然后字符串化，然后再export、import，配合webpack进行模块化管理,这样就很容易使用了。\"\n          )\n        ])\n      ])\n    ]),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _vm._v(\" \"),\n    _vm._m(12),\n    _vm._v(\" \"),\n    _vm._m(13),\n    _vm._m(14),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"值得注意的是：它们之间通信是通过拷贝的形式来传递数据的，进行传递的对象需要经过序列化，接下来在另一端还需要反序列化。这就意味着：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(15),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _vm._m(18),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Worker 线程一旦新建成功，就会始终运行，这样有利于随时响应主线程的通信。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(19),\n    _vm._v(\" \"),\n    _vm._m(20),\n    _vm._m(21),\n    _vm._v(\" \"),\n    _vm._m(22),\n    _c(\"p\", [\n      _vm._v(\"也可以像我给出的\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://codepen.io/OBKoro1/pen/JevMZY?editors=1000\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"栗子\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\"一样,把两个报错放在一起写，有报错把信息传出来就好了。\")\n    ]),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(23),\n    _vm._v(\" \"),\n    _vm._m(24),\n    _vm._v(\" \"),\n    _vm._m(25),\n    _vm._v(\" \"),\n    _vm._m(26),\n    _vm._v(\" \"),\n    _vm._m(27),\n    _vm._v(\" \"),\n    _vm._m(28),\n    _vm._m(29),\n    _vm._v(\" \"),\n    _vm._m(30),\n    _vm._m(31),\n    _vm._v(\" \"),\n    _vm._m(32),\n    _vm._m(33),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Worker 线程能够访问一个全局函数 imprtScripts()来引入脚本，该函数接受 0 个或者多个 URI 作为参数。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(34),\n    _vm._m(35),\n    _vm._v(\" \"),\n    _vm._m(36),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"因为 worker 创造了另外一个线程，不在主线程上，相应的会有一些限制，我们无法使用下列对象：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(37),\n    _vm._v(\" \"),\n    _vm._m(38),\n    _vm._v(\" \"),\n    _vm._m(39),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(40),\n    _vm._v(\" \"),\n    _c(\"ol\", [\n      _c(\"li\", [\n        _vm._m(41),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://codepen.io/OBKoro1/pen/JevMZY?editors=1010\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"栗子\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\"最下方有。\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _vm._m(42)\n    ]),\n    _vm._v(\" \"),\n    _vm._m(43),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"因为主线程与 worker 线程之间的通信是拷贝关系，当我们要传递一个巨大的二进制文件给 worker 线程处理时(worker 线程就是用来干这个的)，这时候使用拷贝的方式来传递数据，无疑会造成性能问题。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(44),\n    _vm._v(\" \"),\n    _vm._m(45),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"下方栗子出自\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://juejin.im/post/59c1b3645188250ea1502e46#comment\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"浅谈 HTML5 Web Worker\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(46),\n    _vm._m(47),\n    _vm._v(\" \"),\n    _vm._m(48),\n    _vm._v(\" \"),\n    _vm._m(49),\n    _vm._v(\" \"),\n    _vm._m(50),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"没有找到具体的制定日期，有篇博客是在 10 年的 7 月份写的，也就是说 web worker 至少出现了八年了，以下兼容摘自\"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href:\n              \"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Workers_API/Using_web_workers\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"MDN\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\"：\")\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"Chrome：4, Firefox：3.5, IE：10.0, Opera：10.6, Safari：4\")\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"现在兼容还是做的比较好的，如果实在不放心的话：\")]),\n    _vm._v(\" \"),\n    _vm._m(51),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(52),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Web Worker的出现，给浏览器带来了后台计算的能力，把耗时的任务分配给worker线程来做，在很大程度上缓解了主线程UI渲染阻塞的问题，提升页面性能。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"使用起来也不复杂，以后有复杂的问题，记得要丢给我们浏览器的后台(web worker)来处理\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"看完之后，一定要研究一下文中的栗子，自己鼓捣鼓捣，实践出真知！\")\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"PS: 推荐一下我上个月写的\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://juejin.im/post/5bcad1326fb9a05cda779d0b\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"手摸手教你使用WebSocket\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\"，感兴趣的可以看一下。\")\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"以上2018.11.25\")]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"参考资料：\")]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href:\n              \"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Workers_API/Using_web_workers\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"MDN\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"http://www.ruanyifeng.com/blog/2018/07/web-worker.html\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"Web Worker 使用教程\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://juejin.im/post/59c1b3645188250ea1502e46\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"浅谈HTML5 Web Worker\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"h3\", { attrs: { id: \"点个star支持我一下\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#点个star支持我一下\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 点个\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/OBKoro1/web_accumulate\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"Star\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\"支持我一下~\")\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"前端er来学习一下webworker吧\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#前端er来学习一下webworker吧\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 前端er来学习一下webWorker吧\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"场景\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#场景\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 场景\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [\n        _vm._v(\"当我们有些任务需要花费大量的时间，进行复杂的运算\")\n      ]),\n      _vm._v(\n        \"，就会导致页面卡死：用户点击页面需要很长的时间才能响应，因为前面的任务还未完成，后面的任务只能排队等待。对用户来说，这样的体验无疑是糟糕的，web worker 就是为了解决这种花费大量时间的复杂运算而诞生的！\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"webworker-的作用：创建-worker-线程\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#webworker-的作用：创建-worker-线程\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" WebWorker 的作用：创建 worker 线程\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"WebWorker 允许在主线程之外再创建一个 worker 线程，\"),\n      _c(\"strong\", [\n        _vm._v(\n          \"在主线程执行任务的同时，worker 线程也可以在后台执行它自己的任务，互不干扰\"\n        )\n      ]),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"主线程\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#主线程\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 主线程\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"我们先来看一下栗子：\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#我们先来看一下栗子：\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 我们先来看一下栗子：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"创建-worker-对象：\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#创建-worker-对象：\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 创建 worker 对象：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"主线程调用\"),\n      _c(\"code\", [_vm._v(\"new Worker()\")]),\n      _vm._v(\n        \"构造函数，新建一个 worker 线程，构造函数的参数是一个 url，生成这个 url 的方法有两种：\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [_vm._v(\"脚本文件：\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"const\")\n            ]),\n            _vm._v(\" worker \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"new\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"Worker\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'https://~.js'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n          _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n          _c(\"br\")\n        ])\n      ]),\n      _c(\"p\", [_vm._v(\"因为 worker 的两个限制：\")]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [\n          _c(\"p\", [\n            _c(\"strong\", [\n              _vm._v(\n                \"分配给 Worker 线程运行的脚本文件，必须与主线程的脚本文件同源\"\n              )\n            ]),\n            _vm._v(\"。\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [\n            _c(\"strong\", [_vm._v(\"worker 不能读取本地的文件\")]),\n            _vm._v(\"(不能打开本机的文件系统\"),\n            _c(\"code\", [_vm._v(\"file://\")]),\n            _vm._v(\")，它所加载的脚本必须来自网络。\")\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"可以看到限制还是比较多的，如果要使用这种形式的话，在项目中推荐把文件放在静态文件夹中，打包的时候直接拷贝进去，这样我们就可以拿到固定的链接了，\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"const\")\n          ]),\n          _vm._v(\" data \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token template-string\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"`\\n    //  worker线程 do something\\n    `\")\n            ])\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 转成二进制对象\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"const\")\n          ]),\n          _vm._v(\" blob \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"new\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Blob\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"data\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 生成url\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"const\")\n          ]),\n          _vm._v(\" url \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" window\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token constant\" } }, [\n            _vm._v(\"URL\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"createObjectURL\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"blob\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 加载url\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"const\")\n          ]),\n          _vm._v(\" worker \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"new\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Worker\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"url\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"9\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"主线程的其他-api：\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#主线程的其他-api：\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 主线程的其他 API：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"_1-主线程与-worker-线程通信\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#_1-主线程与-worker-线程通信\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 1. 主线程与 worker 线程通信:\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"worker\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"postMessage\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  hello\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'hello'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'world'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"它们\"),\n      _c(\"strong\", [_vm._v(\"相互之间的通信可以传递对象和数组\")]),\n      _vm._v(\n        \"，这样我们就可以根据相互之间传递的信息来进行一些操作，比如可以设置一个\"\n      ),\n      _c(\"code\", [_vm._v(\"type\")]),\n      _vm._v(\"属性，当值为\"),\n      _c(\"code\", [_vm._v(\"hello\")]),\n      _vm._v(\"时执行什么函数，当值为\"),\n      _c(\"code\", [_vm._v(\"world\")]),\n      _vm._v(\"的时候执行什么函数。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [\n        _c(\"strong\", [_vm._v(\"我们不能传递不能被序列化的数据\")]),\n        _vm._v(\"，比如函数，会抛出错误的。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"在一端改变数据，另外一端不会受影响，因为数据不存在引用，是拷贝过来的。\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"_2-监听-worker-线程返回的信息\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#_2-监听-worker-线程返回的信息\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 2. 监听 worker 线程返回的信息\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"worker\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token function-variable function\" } },\n            [_vm._v(\"onmessage\")]\n          ),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"e\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'父进程接收的数据：'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" e\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"data\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// doSomething();\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"_3-主线程关闭-worker-线程\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#_3-主线程关闭-worker-线程\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 3. 主线程关闭 worker 线程\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"这也是 Worker 比较耗费计算机的计算资源(\"),\n      _c(\"code\", [_vm._v(\"CPU\")]),\n      _vm._v(\")的原因，一旦使用完毕，就应该关闭 worker 线程。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"worker\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"terminate\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 主线程关闭worker线程\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"_4-监听错误\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#_4-监听错误\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 4. 监听错误\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// worker线程报错\")\n          ]),\n          _vm._v(\"\\nworker\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token function-variable function\" } },\n            [_vm._v(\"onerror\")]\n          ),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" e \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=>\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"// e.filename - 发生错误的脚本文件名；e.lineno - 出现错误的行号；以及 e.message - 可读性良好的错误消息\"\n            )\n          ]),\n          _vm._v(\"\\n    console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'onerror'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" e\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"worker-线程\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#worker-线程\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Worker 线程\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"self-代表-worker-进程自身\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#self-代表-worker-进程自身\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" self 代表 worker 进程自身\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"worker 线程的执行上下文是一个叫做\"),\n      _c(\"code\", [_vm._v(\"WorkerGlobalScope\")]),\n      _vm._v(\"的东西跟主线程的上下文(window)不一样。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"我们可以使用\"),\n      _c(\"code\", [_vm._v(\"self\")]),\n      _vm._v(\"/\"),\n      _c(\"code\", [_vm._v(\"WorkerGlobalScope\")]),\n      _vm._v(\"来访问全局对象。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"监听主线程传过来的信息：\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#监听主线程传过来的信息：\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 监听主线程传过来的信息：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"self\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token function-variable function\" } },\n            [_vm._v(\"onmessage\")]\n          ),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" e \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=>\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'主线程传来的信息：'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" e\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"data\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// do something\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"发送信息给主线程\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#发送信息给主线程\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 发送信息给主线程\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"self\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"postMessage\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    hello\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'这条信息'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'来自worker线程'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"worker-线程关闭自身\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#worker-线程关闭自身\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" worker 线程关闭自身\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"self\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"close\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"worker-线程加载脚本：\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#worker-线程加载脚本：\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" worker 线程加载脚本：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"importScripts\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'http~.js'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'http~2.js'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [_c(\"p\", [_vm._v(\"脚本中的全局变量都能被 worker 线程使用。\")])]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\n            \"脚本的下载顺序是不固定的，但执行时会按照传入 importScripts() 中的文件名顺序进行，这个过程是同步的。\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"worker-线程限制\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#worker-线程限制\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Worker 线程限制\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [_vm._v(\"window 对象\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"document 对象\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"DOM 对象\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"parent 对象\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_vm._v(\"我们可以使用下列对象/功能\")]),\n      _vm._v(\"：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [_c(\"p\", [_vm._v(\"浏览器：navigator 对象\")])]),\n      _vm._v(\" \"),\n      _c(\"li\", [_c(\"p\", [_vm._v(\"URL：location 对象，只读\")])]),\n      _vm._v(\" \"),\n      _c(\"li\", [_c(\"p\", [_vm._v(\"发送请求：XMLHttpRequest 对象\")])]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"定时器：setTimeout/setInterval，在 worker 线程轮询也是很棒！\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_c(\"p\", [_vm._v(\"应用缓存：Application Cache\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"多个-worker-线程\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#多个-worker-线程\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 多个 worker 线程\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_vm._v(\"在主线程内可以创建多个 worker 线程\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _c(\"strong\", [\n          _vm._v(\"worker 线程内还可以新建 worker 线程，使用同源的脚本文件创建\")\n        ]),\n        _vm._v(\"。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"在 worker 线程内再新建 worker 线程就不能使用\"),\n        _c(\"code\", [_vm._v(\"window.URL.createObjectURL(blob)\")]),\n        _vm._v(\n          \"，需要使用同源的脚本文件来创建新的 worker 线程，因为我们无法访问到\"\n        ),\n        _c(\"code\", [_vm._v(\"window\")]),\n        _vm._v(\"对象。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"这里不方便演示，跟在主线程创建 worker 线程是一个套路，只是改成了脚本文件形式创建 worker 线程。\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"线程间转移二进制数据\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#线程间转移二进制数据\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 线程间转移二进制数据\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [\n        _vm._v(\n          \"幸运的是，Web Worker 提供了一中转移数据的方式，允许主线程把二进制数据直接转移给子线程\"\n        )\n      ]),\n      _vm._v(\"。这种方式比原先拷贝的方式，有巨大的性能提升。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [\n        _vm._v(\n          \"一旦数据转移到其他线程，原先线程就无法再使用这些二进制数据了，这是为了防止出现多个线程同时修改数据的麻烦局面\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 创建二进制数据\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" uInt8Array \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"new\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Uint8Array\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"1024\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"*\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"1024\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"*\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"32\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 32MB\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"for\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"<\")\n          ]),\n          _vm._v(\" uInt8Array \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"length\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"++\")\n          ]),\n          _vm._v(\"i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    uInt8Array\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"uInt8Array\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"length\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 传递前长度:33554432\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 字符串形式创建worker线程\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" myTask \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token template-string\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\n                \"`\\n    onmessage = function (e) {\\n        var data = e.data;\\n        console.log('worker:', data);\\n    };\\n`\"\n              )\n            ])\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" blob \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"new\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Blob\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"myTask\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" myWorker \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"new\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Worker\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"window\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token constant\" } }, [\n            _vm._v(\"URL\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"createObjectURL\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"blob\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 使用这个格式(a,[a]) 来转移二进制数据\")\n          ]),\n          _vm._v(\"\\nmyWorker\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"postMessage\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"uInt8Array\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"buffer\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"uInt8Array\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"buffer\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 发送数据、转移数据\")\n          ]),\n          _vm._v(\"\\n\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"uInt8Array\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"length\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 传递后长度:0，原先线程内没有这个数据了\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"9\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"10\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"11\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"12\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"13\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"14\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"15\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"16\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"17\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"18\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"19\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"20\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"21\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [\n      _c(\"p\", [\n        _vm._v(\n          \"二进制数据有：File、Blob、ArrayBuffer 等类型，也允许在 worker 线程之间发送，\"\n        ),\n        _c(\"strong\", [\n          _vm._v(\n            \"这对于影像处理、声音处理、3D 运算等就非常方便了，不会产生性能负担\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"应用场景：\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#应用场景：\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 应用场景：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [_c(\"p\", [_vm._v(\"数学运算\")])]),\n      _vm._v(\" \"),\n      _c(\"li\", [_c(\"p\", [_vm._v(\"图像、影音等文件处理\")])]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [_vm._v(\"大量数据检索\")]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\n            \"比如用户输入时，我们在后台检索答案，或者帮助用户联想，纠错等操作.\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [_vm._v(\"耗时任务都丢到 webworker 解放我们的主线程。\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"兼容：\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#兼容：\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 兼容：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"if\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"window\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"Worker\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"...\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"else\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"...\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"结语：\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#结语：\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 结语：\")\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}