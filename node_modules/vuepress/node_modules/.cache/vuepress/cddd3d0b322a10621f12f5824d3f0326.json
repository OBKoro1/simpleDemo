{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/accumulate/effect/input的一些坑点分享.md?vue&type=template&id=f40d8018&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/accumulate/effect/input的一些坑点分享.md","mtime":1610439348359},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"当时这个问题是去年在 ios 中遇到的，在最新版的 ios 系统中，貌似解决了这个 bug，但是为了向下兼容以及防止其他其他机型也出现这个问题，大家可以稍微记一下这个解决方法。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"在解决这个问题的时候，有试过下面这种方法:\")]),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href:\n              \"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/scrollIntoView\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"Element.scrollIntoView()\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\":方法\"),\n      _c(\"strong\", [_vm._v(\"让当前的元素滚动到浏览器窗口的可视区域内\")]),\n      _vm._v(\"。\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(9),\n    _c(\"p\", [\n      _vm._v(\n        \"这个 api 还可以设置对齐方法，选择将 input 放在屏幕的上方/下方，类似的 api 还有:\"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href:\n              \"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/scrollIntoViewIfNeeded\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"Element.scrollIntoViewIfNeeded()\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\"，这两个是解决同一个问题的，选择一个用就可以了。\")\n    ]),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(10),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"这个就很简单了，只需更改 input 的 type 属性值就可以了。可以看一下 codepen 的\"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://codepen.io/OBKoro1/pen/VxxgyG\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"demo\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(12),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"现在用户输入 emoji 简直已经成为了习惯，如果前后端没有对 emoji 表情进行处理，那么用户在上传的时候，就会请求失败。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(13),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"之前看过一篇\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://www.bbsmax.com/A/nAJvkxjY5r/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"文章\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\n        \"，这个文章里面讲了怎么在上传和拿数据下来的时候不会报错，但是不能在显示的时候转换为表情。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(14),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"之所以说这个，当表单请求错误的时候各位如果实在找不到问题可以往这方面考虑一下，我真的被坑过的 o(╥﹏╥)o。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(15),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _vm._v(\" \"),\n    _c(\"h4\", { attrs: { id: \"css-属性-white-space\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#css-属性-white-space\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Css 属性:\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"http://www.w3school.com.cn/cssref/pr_text_white-space.asp\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"white-space\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"white-space 属性用于设置如何处理元素内的空白，其中包括空白符和换行符。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(18),\n    _vm._v(\" \"),\n    _vm._m(19),\n    _vm._v(\" \"),\n    _vm._m(20),\n    _vm._v(\" \"),\n    _vm._m(21),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(22),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"输入框清除首尾空格是 input 较为常见的需求，通常在上传的时候将首尾空格去除掉。一般使用:字符串的原生方法\"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href:\n              \"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/Trim\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"trim()\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" 从一个字符串的两端删除空白字符。\")\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"trim() 方法并不影响原字符串本身，它返回的是一个新的字符串。\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(23),\n    _vm._v(\" \"),\n    _vm._m(24),\n    _vm._m(25),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"Vue 提供了\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://cn.vuejs.org/v2/guide/forms.html#trim\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"修饰符\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\"删除首尾空格， 加了修饰符\"),\n      _c(\"code\", [_vm._v(\".trim\")]),\n      _vm._v(\"会自动过滤用户输入的首尾空白字符\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(26),\n    _c(\"p\", [\n      _vm._v(\"貌似 angular 也提供了类似过滤的方法，感兴趣的可以自己去查一下。\")\n    ]),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(27),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"在用户登录或者搜索框的时候，一般都会监听键盘事件绑定回车按键，来执行登录/搜索 等操作。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(28),\n    _vm._v(\" \"),\n    _vm._m(29),\n    _vm._m(30),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"Vue 为监听键盘事件，提供了\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href:\n              \"https://cn.vuejs.org/v2/guide/events.html#%E6%8C%89%E9%94%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"按键修饰符\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\n        \"，并且为常用的按键提供了别名，使用方法如下:当回车按键在 input 中被按下的时候，会触发里面的函数。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(31),\n    _vm._v(\" \"),\n    _c(\"h3\", { attrs: { id: \"点个star支持我一下\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#点个star支持我一下\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 点个\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/OBKoro1/web_accumulate\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"Star\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\"支持我一下~\")\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"input-的一些坑点分享\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#input-的一些坑点分享\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" input 的一些坑点分享\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"本文内容包括：\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#本文内容包括：\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 本文内容包括：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [_vm._v(\"移动端底部 input 被弹出的键盘遮挡。\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"控制 input 显/隐密码。\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"在 input 中输入 emoji 表情导致请求失败。\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"input 多行输入显示换行。\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"输入框首尾清除空格-trim()\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"在 input 中监听键盘事件\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"移动端底部-input-被弹出的键盘遮挡\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#移动端底部-input-被弹出的键盘遮挡\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 移动端底部 input 被弹出的键盘遮挡\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"input 输入框是通过\"),\n      _c(\"code\", [_vm._v(\"position:fixed\")]),\n      _vm._v(\n        \"一直放在页面底部，当点击 input 进行输入的时候，就会出现如下图片情况（有的机型会遮挡一些）。\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"img\", {\n        attrs: {\n          src:\n            \"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/16353072dcc21218?raw=true\",\n          alt: \"\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"s\", [\n        _vm._v(\n          \"在 input 的 focus 事件中，开启一个定时器，然后每隔 300 毫秒进行一次 document.body.scrollTop=document.body.scrollHeight 的调整，运行 3 次即可。\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"当时还以为解决了，但是当你底部评论区还有很多内容，你每次点击 input，想要输入的时候，整个页面通过\"\n      ),\n      _c(\"code\", [_vm._v(\"scrollTop\")]),\n      _vm._v(\n        \"就会不断的向下滚动，这个体验不用说自己也知道是相当失败的，然后就再去找解决方法，结果就有了下面这个。\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"element-scrollintoview\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#element-scrollintoview\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Element.scrollIntoView()\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"document\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"querySelector\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'#inputId'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"scrollIntoView\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"//只要在input的点击事件，或者获取焦点的事件中，加入这个api就好了\"\n            )\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"控制-input-显-隐密码\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#控制-input-显-隐密码\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 控制 input 显/隐密码\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//点击函数，获取dom，判断更改属性。\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"show\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"let\")\n          ]),\n          _vm._v(\" input\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\"document\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"getElementById\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v('\"inputId\"')\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"if\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"input\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"type\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"==\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v('\"password\"')\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n        input\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"type\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'text'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"else\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n        input\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"type\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'password'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"9\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h3\",\n      { attrs: { id: \"在-input-中输入-emoji-表情导致请求失败\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#在-input-中输入-emoji-表情导致请求失败\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 在 input 中输入 emoji 表情导致请求失败\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_vm._v(\"通常这个问题是后端那边处理比较合适的\")]),\n      _vm._v(\"，前端是做不了这件事的，或者说很难做这件事。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"ps:之前拿微信用户名的时候，有些人可能在微信昵称上面就会包含表情，\"\n      ),\n      _c(\"strong\", [_vm._v(\"如果后端没对表情处理转换，那么普通请求也会出错\")]),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h3\",\n      { attrs: { id: \"textarea-多行回车换行，显示的时候换行设置：\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#textarea-多行回车换行，显示的时候换行设置：\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" textarea 多行回车换行，显示的时候换行设置：\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"在使用\"),\n      _c(\"code\", [_vm._v(\"textarea\")]),\n      _vm._v(\n        \"标签输入多行文本的时候，如果没有对多行文本显示处理，会导致没有换行的情况,就比如下面这种情况，用户在\"\n      ),\n      _c(\"code\", [_vm._v(\"textarea\")]),\n      _vm._v(\"是有换行的。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"img\", {\n        attrs: {\n          src:\n            \"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/1635388bf4dca899?raw=true\",\n          alt: \"\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"img\", {\n        attrs: {\n          src:\n            \"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/16353927aec80539?raw=true\",\n          alt: \"\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"只要在\"),\n      _c(\"strong\", [\n        _vm._v(\"显示内容的地方将该属性设置为\"),\n        _c(\"code\", [_vm._v(\"white-space: pre-line\")]),\n        _vm._v(\"或者\"),\n        _c(\"code\", [_vm._v(\"white-space:pre-wrap\")]),\n        _vm._v(\"，多行文本就可以换行了\")\n      ]),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"设置之后，显示效果：\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#设置之后，显示效果：\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 设置之后，显示效果：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"img\", {\n        attrs: {\n          src:\n            \"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/1635d9d75136f6d8?raw=true\",\n          alt: \"\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"输入框首尾清除空格-trim\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#输入框首尾清除空格-trim\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 输入框首尾清除空格-trim()\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"原生清除方法\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#原生清除方法\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 原生清除方法:\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//原生方法获取值，清除首尾空格上传str2\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"let\")\n          ]),\n          _vm._v(\" str2 \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" document\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"getElementById\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'inputId'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"trim\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"vue-清除方法：\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#vue-清除方法：\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Vue 清除方法：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-html line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-html\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"input\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"v-model.trim\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"msg\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\">\")\n            ])\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"在-input-中监听键盘事件\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#在-input-中监听键盘事件\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 在 input 中监听键盘事件\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"原生绑定\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#原生绑定\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 原生绑定:\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"<\")\n          ]),\n          _vm._v(\"input onkeydown\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v('\"keydownMsg(event)\"')\n          ]),\n          _vm._v(\" type\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v('\"text\"')\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"/\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\">\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"keydownMsg\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"key\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  keyCode \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" key\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"keyCode\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//获取按键代码\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"if\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"keyCode \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"==\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"13\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//判断按下的是否为回车键\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 在input上监听到回车 do something\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"vue-按键修饰符\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#vue-按键修饰符\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Vue 按键修饰符\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-html line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-html\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"input\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"@keyup.enter\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"enterActive\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\">\")\n            ])\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}