{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/accumulate/tool/忍者秘籍定时器机制.md?vue&type=template&id=3aca53d2&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/accumulate/tool/忍者秘籍定时器机制.md","mtime":1610439348360},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"前段时间刚看完《JS忍者秘籍》，虽说是15年出版的，有些东西是过时了，但像对原型链、闭包、正则、定时器之类的机制却是不会过时的，里面很多东西都讲的很细，还是值得一读的，本文将对这本书中对定时器机制的部分进行详细的解析，如果喜欢的话可以点波赞/关注，支持一下，希望大家看完本文可以有所收获。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"阅读本文之前，推荐先阅读\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://juejin.im/post/5b24b116e51d4558a65fdb70\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [\n          _vm._v(\"Js 的事件循环(Event Loop)机制以及实例讲解\"),\n          _c(\"OutboundLink\")\n        ],\n        1\n      ),\n      _vm._v(\n        \"这篇文章来理解背后发生的事情，本文对事件循环机制不会很仔细的讲解。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"由于JS的单线程特性，定时器提供了一种跳出单线程限制的方法，即让一段代码在一定毫秒之后，再异步执行。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"直接引用忍者秘籍中的图片：\")]),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"第三点和第四点的解决方法可以参考我之前写的\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://juejin.im/post/5a587b46f265da3e3b7a7677#heading-4\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"Vue 实践过程中的几个问题\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\"。\")\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"接下来要讲的是第五点和第六点，这两点是最重要，也是本文要重点解析的内容。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"下面来看忍者秘籍中的栗子：\")]),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"让我们看看这里发生了什么事情：\")]),\n    _vm._v(\" \"),\n    _vm._m(9),\n    _vm._v(\" \"),\n    _vm._m(10),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _vm._v(\" \"),\n    _vm._m(12),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"让我们回到栗子中：\")]),\n    _vm._v(\" \"),\n    _vm._m(13),\n    _vm._v(\" \"),\n    _vm._m(14),\n    _vm._v(\" \"),\n    _vm._m(15),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _vm._v(\" \"),\n    _vm._m(18),\n    _vm._v(\" \"),\n    _vm._m(19),\n    _vm._v(\" \"),\n    _vm._m(20),\n    _vm._v(\" \"),\n    _vm._m(21),\n    _vm._v(\" \"),\n    _vm._m(22),\n    _vm._v(\" \"),\n    _vm._m(23),\n    _vm._v(\" \"),\n    _vm._m(24),\n    _vm._v(\" \"),\n    _vm._m(25),\n    _vm._v(\" \"),\n    _vm._m(26),\n    _vm._v(\" \"),\n    _vm._m(27),\n    _vm._v(\" \"),\n    _vm._m(28),\n    _vm._v(\" \"),\n    _vm._m(29),\n    _vm._v(\" \"),\n    _vm._m(30),\n    _vm._v(\" \"),\n    _vm._m(31),\n    _vm._v(\" \"),\n    _vm._m(32),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(33),\n    _vm._v(\" \"),\n    _vm._m(34),\n    _vm._v(\" \"),\n    _vm._m(35),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"事实上，关于任务队列并不是只有简单的排队而已，忍者秘籍中提到为了方便，使用了这个概念，如果希望能更清晰的了解背后的机制，再次推荐阅读一下：\"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://juejin.im/post/5b24b116e51d4558a65fdb70\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [\n          _vm._v(\"Js 的事件循环(Event Loop)机制以及实例讲解\"),\n          _c(\"OutboundLink\")\n        ],\n        1\n      ),\n      _vm._v(\"，\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(36),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"这上面所有一切，都是由js单线程特性导致的，所以会有事件排队、先进先出、setInterval调用被废弃、定时器无法保证准时执行回调函数以及出现setInterval的连续执行，时刻记住这一特性，很多关于事件执行顺序的问题都能想的通，并且找出解决方法。\\n\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"h3\", { attrs: { id: \"点个star支持我一下\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#点个star支持我一下\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 点个\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/OBKoro1/web_accumulate\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"Star\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\"支持我一下~\")\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"js忍者秘籍中的定时器机制详解\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#js忍者秘籍中的定时器机制详解\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" JS忍者秘籍中的定时器机制详解\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"准备\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#准备\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 准备\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"定时器解决的问题：\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#定时器解决的问题：\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 定时器解决的问题：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"设置和清除定时器：\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#设置和清除定时器：\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 设置和清除定时器：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"img\", {\n        attrs: {\n          src:\n            \"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/1640c7f6e32c21c3?raw=true\",\n          alt: \"\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"注意：\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#注意：\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 注意：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [_vm._v(\"定时器的时间间隔设为0，也会有几毫秒的延迟。\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"在使用\"),\n        _c(\"code\", [_vm._v(\"setTimeout\")]),\n        _vm._v(\"和\"),\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\"的时候最好将其赋值给一个变量，以便取消定时器。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"在使用\"),\n        _c(\"code\", [_vm._v(\"Vue\")]),\n        _vm._v(\"的时候，\"),\n        _c(\"code\", [_vm._v(\"setTimeout\")]),\n        _vm._v(\"和\"),\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\"的this指向的是window对象，访问不到组件数据以及方法。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"在使用\"),\n        _c(\"code\", [_vm._v(\"Vue\")]),\n        _vm._v(\"的时候，路由跳转并不会销毁\"),\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\"，但是组件已经销毁了，这会导致问题。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"在执行线程中\"),\n        _c(\"code\", [_vm._v(\"setTimeout\")]),\n        _vm._v(\"/\"),\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\"无法保证准时执行回调函数的。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\"调用有可能会被废弃以及\"),\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\"的连续执行\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"执行线程中的定时器执行\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#执行线程中的定时器执行\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 执行线程中的定时器执行\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"img\", {\n        attrs: {\n          src:\n            \"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/1640ca6240fb3eeb?raw=true\",\n          alt: \"\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [_vm._v(\"首先在0毫秒的时候有一个持续18毫秒的js代码块要执行。\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"然后在0毫秒的时候设了两个10毫秒延迟的定时器，\"),\n        _c(\"code\", [_vm._v(\"setTimeout\")]),\n        _vm._v(\"以及\"),\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\",\"),\n        _c(\"code\", [_vm._v(\"setTimeout\")]),\n        _vm._v(\"先设定。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"在第6毫秒的时候有一个发生了鼠标单击事件。\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"事件排队。\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#事件排队。\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 事件排队。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"同时发生了这么多事情，由于js的单线程特性，\"),\n      _c(\"strong\", [\n        _vm._v(\n          \"当线程正在执行状态，有异步事件触发时，它就会排队，并且在线程空闲时才进行执行\"\n        )\n      ]),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"pre\", [\n      _c(\"code\", [\n        _vm._v(\n          \"    这里的异步事件包括：鼠标单击，定时器触发，ajax请求、promise等事件。\\n\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"栗子中首先有一个18毫秒的代码块要执行，在这18毫秒中只能执行这段代码块，\"\n      ),\n      _c(\"strong\", [_vm._v(\"其他事件触发了之后只能排队等待执行\")]),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"在代码块还在运行期间，第6毫秒的时候，发生了一个鼠标单击事件，以及第10毫秒时的\"\n      ),\n      _c(\"code\", [_vm._v(\"setTimeout\")]),\n      _vm._v(\"和\"),\n      _c(\"code\", [_vm._v(\"setInterval\")]),\n      _vm._v(\"两个处理程序，这三个事件不能立即执行，而是\"),\n      _c(\"strong\", [_vm._v(\"被添加到等待执行的队列\")]),\n      _vm._v(\"中。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"先进先出-先排队的先执行\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#先进先出-先排队的先执行\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 先进先出(先排队的先执行)\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"18毫秒的时候代码块结束执行，有三个任务在排队等待执行，根据\"),\n      _c(\"strong\", [_vm._v(\"先进先出的原则，此时会先执行click事件\")]),\n      _vm._v(\"，\"),\n      _c(\"code\", [_vm._v(\"setTimeout\")]),\n      _vm._v(\"和\"),\n      _c(\"code\", [_vm._v(\"setInterval\")]),\n      _vm._v(\"将继续排队等待执行。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"setinterval调用被废弃\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#setinterval调用被废弃\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" setInterval调用被废弃\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"在click事件执行时，第20毫秒处，第二个\"),\n      _c(\"code\", [_vm._v(\"setInterval\")]),\n      _vm._v(\"也到期了，因为此时已经click事件占用了线程，所以\"),\n      _c(\"code\", [_vm._v(\"setInterval\")]),\n      _vm._v(\"还是不能被执行，并且因为此时\"),\n      _c(\"strong\", [\n        _vm._v(\"队列中已经有一个\"),\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\"正在排队等待执行，所以这一次的\"),\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\"的调用将被废弃\")\n      ]),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [\n        _vm._v(\"浏览器不会对同一个setInterval处理程序多次添加到待执行队列。\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h3\",\n      { attrs: { id: \"settimeout-setinterval无法保证准时执行回调函数\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#settimeout-setinterval无法保证准时执行回调函数\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" \"),\n        _c(\"code\", [_vm._v(\"setTimeout\")]),\n        _vm._v(\"/\"),\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\"无法保证准时执行回调函数\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"click事件在第28毫秒处结束执行，有两个任务(\"),\n      _c(\"code\", [_vm._v(\"setTimeout\")]),\n      _vm._v(\"和\"),\n      _c(\"code\", [_vm._v(\"setInterval\")]),\n      _vm._v(\")正在等待执行，遵循先进先出的原则，\"),\n      _c(\"code\", [_vm._v(\"setTimeout\")]),\n      _vm._v(\"早于\"),\n      _c(\"code\", [_vm._v(\"setInterval\")]),\n      _vm._v(\"设定，所以先执行\"),\n      _c(\"code\", [_vm._v(\"setTimeout\")]),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"so:\"),\n      _c(\"strong\", [\n        _vm._v(\"我们期望在第10毫秒处执行的\"),\n        _c(\"code\", [_vm._v(\"setTimeout\")]),\n        _vm._v(\"处理程序，最终会在第28毫秒处才开始执行\")\n      ]),\n      _vm._v(\"，这就是上文提到的\"),\n      _c(\"code\", [_vm._v(\"setTimeout\")]),\n      _vm._v(\"/\"),\n      _c(\"code\", [_vm._v(\"setInterval\")]),\n      _vm._v(\"无法保证准时执行回调函数。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"在30毫秒处，\"),\n      _c(\"code\", [_vm._v(\"setInterval\")]),\n      _vm._v(\"又触发了，因为队列中已经有\"),\n      _c(\"code\", [_vm._v(\"setInterval\")]),\n      _vm._v(\"在排队，所以这次的触发又作废了。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"setinterval的连续执行\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#setinterval的连续执行\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" setInterval的连续执行\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"code\", [_vm._v(\"setTimeout\")]),\n      _vm._v(\"执行结束，在第36毫秒处，队列中的\"),\n      _c(\"code\", [_vm._v(\"setInterval\")]),\n      _vm._v(\"处理程序才开始执行，\"),\n      _c(\"code\", [_vm._v(\"setInterval\")]),\n      _vm._v(\"需要执行6毫秒。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"在第40毫秒的时候\"),\n      _c(\"code\", [_vm._v(\"setInterval\")]),\n      _vm._v(\"再次触发，因为此时\"),\n      _c(\"strong\", [\n        _vm._v(\"上一个\"),\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\"正在执行期间，队列中并没有\"),\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\"在排队，这次触发的\"),\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\"将进入队列等候\")\n      ]),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"所以：\"),\n      _c(\"code\", [_vm._v(\"setInterval\")]),\n      _vm._v(\"的处理时长不能比设定的间隔长，否则\"),\n      _c(\"code\", [_vm._v(\"setInterval\")]),\n      _vm._v(\"将会没有间隔的重复执行\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"第42毫秒的时候，\"),\n      _c(\"strong\", [\n        _vm._v(\"第一个\"),\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\"结束，然后队列中的\"),\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\"立即开始执行\")\n      ]),\n      _vm._v(\"，在48毫秒的时候完成执行。然后50毫秒的时候再次触发\"),\n      _c(\"code\", [_vm._v(\"setInterval\")]),\n      _vm._v(\"，此时没有任务在排队，将会立即执行。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h3\",\n      { attrs: { id: \"settimeout按照一定的间隔周期性的触发定时器。\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#settimeout按照一定的间隔周期性的触发定时器。\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" setTimeout按照一定的间隔周期性的触发定时器。\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"上文说了，\"),\n      _c(\"strong\", [\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\"的处理时长不能比设定的间隔长，否则\"),\n        _c(\"code\", [_vm._v(\"setInterval\")]),\n        _vm._v(\"将会没有间隔的重复执行\")\n      ]),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"但是对这个问题，很多情况下，我们并不能清晰的把控处理程序所消耗的时长，为了我们能\"\n      ),\n      _c(\"strong\", [_vm._v(\"按照一定的间隔周期性的触发定时器\")]),\n      _vm._v(\"，忍者秘籍中提供了下面这种使用方法：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"// 实际上我不止在忍者秘籍中见过，在很多地方都见过这种技术。\"\n            )\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"setTimeout\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"repeatMe\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// do something\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"setTimeout\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"repeatMe\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"10\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" \\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"// 执行完处理程序的内容后，在末尾再间隔10毫秒来调用该程序，这样就能保证一定是10毫秒的周期调用\"\n            )\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"10\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"忍者秘籍中关于定时器的其他知识：\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#忍者秘籍中关于定时器的其他知识：\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 忍者秘籍中关于定时器的其他知识：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\"定时器不能非常细粒化的控制执行的时间，书中建议在15ms以上。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"可以使用定时器来分解长时间运行的任务，这里可以自行谷歌。\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"任务队列只有排队这么简单吗？\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#任务队列只有排队这么简单吗？\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 任务队列只有排队这么简单吗？\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"小结\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#小结\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 小结\")\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}